# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import horos_pb2 as horos__pb2


class HorosStub(object):
    """A simple key-value storage service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurrentImageFile = channel.unary_unary(
                '/icr.Horos/GetCurrentImageFile',
                request_serializer=horos__pb2.DicomNameRequest.SerializeToString,
                response_deserializer=horos__pb2.DicomNameResponse.FromString,
                )
        self.GetCurrentImage = channel.unary_unary(
                '/icr.Horos/GetCurrentImage',
                request_serializer=horos__pb2.ImageGetRequest.SerializeToString,
                response_deserializer=horos__pb2.ImageGetResponse.FromString,
                )
        self.SetCurrentImage = channel.unary_unary(
                '/icr.Horos/SetCurrentImage',
                request_serializer=horos__pb2.ImageSetRequest.SerializeToString,
                response_deserializer=horos__pb2.ImageGetResponse.FromString,
                )


class HorosServicer(object):
    """A simple key-value storage service
    """

    def GetCurrentImageFile(self, request, context):
        """Request current dicom image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCurrentImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HorosServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurrentImageFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentImageFile,
                    request_deserializer=horos__pb2.DicomNameRequest.FromString,
                    response_serializer=horos__pb2.DicomNameResponse.SerializeToString,
            ),
            'GetCurrentImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentImage,
                    request_deserializer=horos__pb2.ImageGetRequest.FromString,
                    response_serializer=horos__pb2.ImageGetResponse.SerializeToString,
            ),
            'SetCurrentImage': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCurrentImage,
                    request_deserializer=horos__pb2.ImageSetRequest.FromString,
                    response_serializer=horos__pb2.ImageGetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'icr.Horos', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Horos(object):
    """A simple key-value storage service
    """

    @staticmethod
    def GetCurrentImageFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/icr.Horos/GetCurrentImageFile',
            horos__pb2.DicomNameRequest.SerializeToString,
            horos__pb2.DicomNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/icr.Horos/GetCurrentImage',
            horos__pb2.ImageGetRequest.SerializeToString,
            horos__pb2.ImageGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCurrentImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/icr.Horos/SetCurrentImage',
            horos__pb2.ImageSetRequest.SerializeToString,
            horos__pb2.ImageGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
