// Copyright ICR
//
// note:
// cd <path>/rpc/cpp
// ../script/protoc.sh `pwd`/.. cpp `pwd`/../horos.proto `pwd`
// cd ../python
// ../script/protoc.sh `pwd`/.. python `pwd`/../horos.proto `pwd`
// see Makefile for more....

syntax = "proto3";
package pyosirix;

// A simple key-value storage service
service Horos {
  // Request current plugin/host version
  rpc GetCurrentVersion (DicomDataRequest) returns (DicomDataRequest) {}

  // Request current dicom image metadata
  rpc GetCurrentImageData (DicomDataRequest) returns (DicomDataResponse) {}

  // Request current dicom image metadata
  rpc GetCurrentImage (ImageGetRequest) returns (ImageGetResponse) {}
  rpc SetCurrentImage (ImageSetRequest) returns (ImageSetResponse) {}

  rpc GetROIsAsList (ROIListRequest) returns (ROIListResponse) {}
  rpc GetROIsAsImage (ROIImageRequest) returns (ROIImageResponse) {}
}

import "roi.proto";

// The request message containing the key
message DicomDataRequest {
  string id = 1;
}

// The response message containing the value associated with the key
message DicomDataResponse {
  string id = 1;
  string patient_id = 2;
  string study_instance_uid = 3;
  string series_instance_uid = 4; // actually this contains: "study_number ser_instance_uid echo_time" (on horos anyway)
  repeated string file_list = 5;
}

message ImageGetRequest {
  string id = 1;
  uint64 viewer_id = 2;
}

message ImageGetResponse {
  string id = 1;
  uint64 viewer_id = 2;
  repeated int32 image_size = 3;
  repeated float voxel_size = 4;
  repeated float origin = 5;
  repeated float data = 6;
}

message ImageSetRequest {
  string id = 1;
  uint64 viewer_id = 2;
  repeated int32 image_size = 3;
  repeated float voxel_size = 4;
  repeated float origin = 5;
  repeated float data = 6;
}

message ImageSetResponse {
  string id = 1;
  uint64 viewer_id = 2;
}
